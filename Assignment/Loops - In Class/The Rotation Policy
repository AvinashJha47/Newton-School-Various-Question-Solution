# Problem Statement:-

English Team has now adopted a rotation policy for two of their players: Dom and Leach.
On the first day, both of them played but, from the second day onwards, Dom plays every second day, while Leach plays every third day.

For example, on:
Day 1 - Both the players play,
Day 2 - Neither of them play,
Day 3 - Only Dom plays,
Day 4 - Only Leach plays,
Day 5 - Only Dom plays,
Day 6 - Neither of them play,
Day 7 - Both the players play.. and so on.

Find the number of days in the interval [A, B] (A and B, both inclusive) when neither Dom nor Leach plays.

# Solution:-

static int RotationPolicy(int A, int B)
{
    int cnt= 0;
    for(int i=A; i<=B; i++)
    {
        if((i-1)%2!=0 && (i-1)%3!=0)
        {
            cnt++;
        }
    }
    return cnt;
}
