# Problem Statement:-

A magic number is a natural number that contains both the digits 7 and 9 in it. For eg:- 79, 879, 53729 etc.
Given a number N, your task is to find the closest Magic number from the given number N.

Note:- If more than one answer exists return the minimum one.

# Solution:-

static boolean check(int n)
//false -- when n is a MagicNumber
//true -- when n is NOT a MagicNumber
{
boolean s=false;
boolean p=false;
while(n>0){
    if(n%10==7)
    {
        s=true; 
    }
    if(n%10==9)
    {
        p=true;
    }
    n/=10;
}
if(s && p)
{
    return false;
}
return true;
}

static int MagicNumber(int n)
{
    int i=0; //distance 

    while(check(n-i) && check(n+i))
    {
        i++;
    }
    if(check(n-i)==false) //!check(n-i)
    {
        return n-i;
    }
    else
    {
        return n+i;
    }
}
