# Problem Statement:-

Given an array of N integers.
There are several right circular rotations of range [L. R] that you need to perform.
After performing these rotations, you need to find element at a given index X.

# Solution:-

import java.io.*;
import java.util.*;
class Main
{
    public static void main (String[] args)
    {
        Scanner sc= new Scanner(System.in);
        int n= sc.nextInt();
        int index= sc.nextInt();
        index--;
        int a[]= new int[n];
        for (int i=0; i<n; i++)
        {
            a[i]= sc.nextInt();
        }
        int rotations= sc.nextInt();
        int[][] ranges= new int[rotations][2];

        for(int i=0; i<rotations; i++)
        {
            ranges[i][0]= sc.nextInt()-1;
            ranges[i][1]= sc.nextInt()-1;
        }
        System.out.println(findElement (a, ranges, rotations, index));
    }
        
    static int findElement(int arr[], int ranges[][], int rotations, int index)
    {
        for (int i= rotations-1;i>=0; i--)
        {
            int left= ranges[i][0];
            int right= ranges[i][1];
        
            if (left<=index && right>=index)
            {
                if(index == left)
                    index = right;
                else
                    index--;
            }
        }
        return arr[index];
    }
}
